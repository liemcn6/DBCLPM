spring.thymeleaf.cache=false

# ===============================
# = DATA SOURCE
# ===============================
server.port=9001
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost:3306/sinhvien
# ong tao database  sinhvien chua ?
# Username and secret
spring.datasource.username=root
spring.datasource.password=root
#co dung khong the :> ? hchuan luon project duoi dung the nay van ch
#
## Username and secret
#spring.datasource.username=	root
#spring.datasource.password= root
#spring.jpa.hibernate.ddl-auto= update
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hebernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.datasource.initialization-mode=always
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#
# Mail service config
#
spring.mail.host=smtp.gmail.com
spring.mail.username=dev.hungtq@gmail.com
spring.mail.password=dev07041998
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false

support-email="dev.hungtq@gmail.com"

